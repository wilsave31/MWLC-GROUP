/*
 * Generated by the Jasper component of Apache Tomcat
 * Version: Apache Tomcat/8.5.71
 * Generated at: 2021-10-22 16:20:29 UTC
 * Note: The last modified time of this file was set to
 *       the last modified time of the source file after
 *       generation to assist with modification tracking.
 */
package org.apache.jsp.presentacion.historiaClinica;

import javax.servlet.*;
import javax.servlet.http.*;
import javax.servlet.jsp.*;
import Clases.HistoriaClinica;
import org.apache.tomcat.util.http.fileupload.FileItem;
import java.util.Iterator;
import java.util.List;
import java.util.Map;
import java.util.HashMap;
import org.apache.tomcat.util.http.fileupload.servlet.ServletRequestContext;
import org.apache.tomcat.util.http.fileupload.servlet.ServletFileUpload;
import org.apache.tomcat.util.http.fileupload.disk.DiskFileItemFactory;
import java.io.File;

public final class historiaClinicaActualizar_jsp extends org.apache.jasper.runtime.HttpJspBase
    implements org.apache.jasper.runtime.JspSourceDependent,
                 org.apache.jasper.runtime.JspSourceImports {

  private static final javax.servlet.jsp.JspFactory _jspxFactory =
          javax.servlet.jsp.JspFactory.getDefaultFactory();

  private static java.util.Map<java.lang.String,java.lang.Long> _jspx_dependants;

  private static final java.util.Set<java.lang.String> _jspx_imports_packages;

  private static final java.util.Set<java.lang.String> _jspx_imports_classes;

  static {
    _jspx_imports_packages = new java.util.HashSet<>();
    _jspx_imports_packages.add("javax.servlet");
    _jspx_imports_packages.add("javax.servlet.http");
    _jspx_imports_packages.add("javax.servlet.jsp");
    _jspx_imports_classes = new java.util.HashSet<>();
    _jspx_imports_classes.add("org.apache.tomcat.util.http.fileupload.FileItem");
    _jspx_imports_classes.add("java.util.List");
    _jspx_imports_classes.add("java.util.Iterator");
    _jspx_imports_classes.add("org.apache.tomcat.util.http.fileupload.disk.DiskFileItemFactory");
    _jspx_imports_classes.add("org.apache.tomcat.util.http.fileupload.servlet.ServletFileUpload");
    _jspx_imports_classes.add("java.util.Map");
    _jspx_imports_classes.add("org.apache.tomcat.util.http.fileupload.servlet.ServletRequestContext");
    _jspx_imports_classes.add("java.util.HashMap");
    _jspx_imports_classes.add("java.io.File");
    _jspx_imports_classes.add("Clases.HistoriaClinica");
  }

  private volatile javax.el.ExpressionFactory _el_expressionfactory;
  private volatile org.apache.tomcat.InstanceManager _jsp_instancemanager;

  public java.util.Map<java.lang.String,java.lang.Long> getDependants() {
    return _jspx_dependants;
  }

  public java.util.Set<java.lang.String> getPackageImports() {
    return _jspx_imports_packages;
  }

  public java.util.Set<java.lang.String> getClassImports() {
    return _jspx_imports_classes;
  }

  public javax.el.ExpressionFactory _jsp_getExpressionFactory() {
    if (_el_expressionfactory == null) {
      synchronized (this) {
        if (_el_expressionfactory == null) {
          _el_expressionfactory = _jspxFactory.getJspApplicationContext(getServletConfig().getServletContext()).getExpressionFactory();
        }
      }
    }
    return _el_expressionfactory;
  }

  public org.apache.tomcat.InstanceManager _jsp_getInstanceManager() {
    if (_jsp_instancemanager == null) {
      synchronized (this) {
        if (_jsp_instancemanager == null) {
          _jsp_instancemanager = org.apache.jasper.runtime.InstanceManagerFactory.getInstanceManager(getServletConfig());
        }
      }
    }
    return _jsp_instancemanager;
  }

  public void _jspInit() {
  }

  public void _jspDestroy() {
  }

  public void _jspService(final javax.servlet.http.HttpServletRequest request, final javax.servlet.http.HttpServletResponse response)
      throws java.io.IOException, javax.servlet.ServletException {

    final java.lang.String _jspx_method = request.getMethod();
    if (!"GET".equals(_jspx_method) && !"POST".equals(_jspx_method) && !"HEAD".equals(_jspx_method) && !javax.servlet.DispatcherType.ERROR.equals(request.getDispatcherType())) {
      response.sendError(HttpServletResponse.SC_METHOD_NOT_ALLOWED, "JSPs only permit GET, POST or HEAD. Jasper also permits OPTIONS");
      return;
    }

    final javax.servlet.jsp.PageContext pageContext;
    javax.servlet.http.HttpSession session = null;
    final javax.servlet.ServletContext application;
    final javax.servlet.ServletConfig config;
    javax.servlet.jsp.JspWriter out = null;
    final java.lang.Object page = this;
    javax.servlet.jsp.JspWriter _jspx_out = null;
    javax.servlet.jsp.PageContext _jspx_page_context = null;


    try {
      response.setContentType("text/html;charset=UTF-8");
      pageContext = _jspxFactory.getPageContext(this, request, response,
      			null, true, 8192, true);
      _jspx_page_context = pageContext;
      application = pageContext.getServletContext();
      config = pageContext.getServletConfig();
      session = pageContext.getSession();
      out = pageContext.getOut();
      _jspx_out = out;

      out.write("\n");
      out.write("\n");
      out.write("\n");
      out.write("\n");
      out.write("\n");
      out.write("\n");
      out.write("\n");
      out.write("\n");
      out.write("\n");
      out.write("\n");
      out.write("\n");
      out.write("\n");
      out.write("\n");

HttpSession sesion=request.getSession();
if (sesion.getAttribute("usuario")==null) response.sendRedirect("index.jsp?mensaje=Acceso no autorizado");
else {   
    String rutaActual=getServletContext().getRealPath("/");
    File destino=new File(rutaActual+"/documentos/historias/");
    DiskFileItemFactory factory=new DiskFileItemFactory(1024*1024, destino);
    ServletFileUpload upload=new ServletFileUpload(factory);
    File archivo=null;
    
    ServletRequestContext origen=new ServletRequestContext(request);
    Map<String,String> variables=new HashMap<String, String>();
    List elementosFormulario=upload.parseRequest(origen);
    Iterator iterador=elementosFormulario.iterator();
    while (iterador.hasNext()) {            
        FileItem elemento=(FileItem) iterador.next();
        //out.println(elemento.getFieldName()+": "+elemento.getString());
        if (elemento.isFormField()) variables.put(elemento.getFieldName(), elemento.getString());
        else {
            variables.put(elemento.getFieldName(), elemento.getName());
            if (!elemento.getName().equals("")){
                //extraer la extensi√≥n del archivo propuesta.pdf
                int ubicacionPunto=elemento.getName().lastIndexOf(".");
                String extension=elemento.getName().substring(ubicacionPunto);//.pdf
                String nombreArchivo=variables.get("nombreCPaciente")+"_"+variables.get("id")+extension;//1_98000000.pdf
                if (elemento.getFieldName().equals("id")) destino=new File(rutaActual+"/documentos/fotos/");
                elemento.write(new File(destino,nombreArchivo));//graba el archivo en la carpeta indicada
                variables.put(elemento.getFieldName(), nombreArchivo);
            }
        }
    }
            
    HistoriaClinica historiaClinica=new HistoriaClinica();
    switch(variables.get("accion")){
        case "Adicionar":            
            historiaClinica.setFechaToma(variables.get("fechaToma"));
            historiaClinica.setNombreCPaciente(variables.get("nombreCPaciente"));
            historiaClinica.setHistoria(variables.get("historia"));
            historiaClinica.guardar();
            break;
        case "Modificar":
            historiaClinica.setId(variables.get("id"));
            historiaClinica.setFechaToma(variables.get("fechaToma"));
            historiaClinica.setNombreCPaciente(variables.get("nombreCPaciente"));
            historiaClinica.setHistoria(variables.get("historia"));
            historiaClinica.modificar();
            break;
        case "Eliminar":
            historiaClinica.setId(variables.get("id"));
            historiaClinica.eliminar();
            break;
    }
    response.sendRedirect("principal.jsp?CONTENIDO=historiaClinica/historiaClinica.jsp&id="+variables.get("id"));

      out.write("\n");
      out.write("<script type=\"text/javascript\">\n");
      out.write("window.location=\"principal.jsp?CONTENIDO=historiaClinica/historiaClinica.jsp&id=");
      out.print(variables.get("id"));
      out.write("\";    \n");
      out.write("</script>\n");

}

      out.write(' ');
      out.write('\n');
    } catch (java.lang.Throwable t) {
      if (!(t instanceof javax.servlet.jsp.SkipPageException)){
        out = _jspx_out;
        if (out != null && out.getBufferSize() != 0)
          try {
            if (response.isCommitted()) {
              out.flush();
            } else {
              out.clearBuffer();
            }
          } catch (java.io.IOException e) {}
        if (_jspx_page_context != null) _jspx_page_context.handlePageException(t);
        else throw new ServletException(t);
      }
    } finally {
      _jspxFactory.releasePageContext(_jspx_page_context);
    }
  }
}
